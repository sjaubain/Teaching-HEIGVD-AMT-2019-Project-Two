/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Fruit;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-12-27T17:29:59.278Z")

@Api(value = "fruits", description = "the fruits API")
public interface FruitsApi {

    @ApiOperation(value = "", nickname = "createFruit", notes = "create a fruit", response = Object.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "created", response = Object.class) })
    @RequestMapping(value = "/fruits",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Object> createFruit(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Fruit fruit);


    @ApiOperation(value = "", nickname = "getFruits", notes = "get the list of all fruits", response = Fruit.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = Fruit.class, responseContainer = "List") })
    @RequestMapping(value = "/fruits",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Fruit>> getFruits();

}
